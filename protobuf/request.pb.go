// Code generated by protoc-gen-go.
// source: request.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateUserRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CreateUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CreateUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CreateUserResponse struct {
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *CreateUserResponse) Reset()                    { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()               {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CreateUserResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateUserRequest)(nil), "protobuf.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "protobuf.CreateUserResponse")
}

func init() { proto.RegisterFile("request.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4a, 0x2d, 0x2c,
	0x4d, 0x2d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69,
	0x4a, 0xde, 0x5c, 0x82, 0xce, 0x45, 0xa9, 0x89, 0x25, 0xa9, 0xa1, 0xc5, 0xa9, 0x45, 0x41, 0x10,
	0x45, 0x42, 0x52, 0x5c, 0x1c, 0xa5, 0xc5, 0xa9, 0x45, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x9c, 0x41, 0x70, 0x3e, 0x48, 0xae, 0x20, 0xb1, 0xb8, 0xb8, 0x3c, 0xbf, 0x28, 0x45,
	0x82, 0x09, 0x22, 0x07, 0xe3, 0x2b, 0xe9, 0x72, 0x09, 0x21, 0x1b, 0x56, 0x5c, 0x90, 0x9f, 0x57,
	0x9c, 0x2a, 0x24, 0xce, 0xc5, 0x0e, 0xd2, 0x1d, 0x9f, 0x99, 0x22, 0xc1, 0x0c, 0xd6, 0xc0, 0x06,
	0xe2, 0x7a, 0xa6, 0x24, 0xb1, 0x81, 0x5d, 0x61, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x16, 0xb5,
	0xb6, 0xe0, 0x9d, 0x00, 0x00, 0x00,
}
